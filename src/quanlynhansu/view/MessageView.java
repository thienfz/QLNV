/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlynhansu.view;

import java.awt.Adjustable;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.event.AdjustmentEvent;
import java.awt.event.AdjustmentListener;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoundedRangeModel;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import static quanlynhansu.QuanLyNhanSu.departmentDAO;
import static quanlynhansu.QuanLyNhanSu.employeeDAO;
import static quanlynhansu.QuanLyNhanSu.messageDAO;
import static quanlynhansu.QuanLyNhanSu.roomDAO;
import quanlynhansu.model.DepartmentDTO;
import quanlynhansu.model.EmployeeDTO;
import quanlynhansu.model.MessageDTO;
import quanlynhansu.model.RoomDTO;

/**
 *
 * @author Thu Hong
 */
public class MessageView extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form MessageView
     */
    EmployeeDTO employee;
    EmployeeDTO receive;
    ArrayList<DepartmentDTO> listDep = new ArrayList<>();
    ArrayList<RoomDTO> listR = new ArrayList<>();
    ArrayList<EmployeeDTO> listAllEmp = new ArrayList<>();

    ArrayList<MessageDTO> allMessage = new ArrayList<>();
    int currentDepID;
    int currentRoomID;
    int currentEmpID = 0;

    public MessageView(int uid) {
        initComponents();
        inbox.setContentType("text/html");
        inbox.setAutoscrolls(false);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(HIDE_ON_CLOSE);

        employee = employeeDAO.getEmployeeByID(uid);
        this.setTitle(employee.getFullname());

        listDep.clear();
        listDep = departmentDAO.getAllDepartment();
        listR.clear();
        listR = roomDAO.getAllRoom();
        listAllEmp.clear();
        listAllEmp = employeeDAO.getAllEmployee();
        cbEmp.removeAllItems();
        cbRoom.removeAllItems();
        cbDep.removeAllItems();

        for (int i = 0; i < listDep.size(); i++) {
            cbDep.addItem(listDep.get(i).getDepname());
        }
        cbDep.setSelectedIndex(0);
        new Thread(this).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        input = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        search = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        cbDep = new javax.swing.JComboBox<>();
        cbRoom = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbEmp = new javax.swing.JComboBox<>();
        name = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        inbox = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        input.setColumns(20);
        input.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        input.setRows(5);
        jScrollPane2.setViewportView(input);

        jButton1.setText("Send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Search");

        cbDep.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbDep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDepActionPerformed(evt);
            }
        });

        cbRoom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRoomActionPerformed(evt);
            }
        });

        jLabel1.setText("Departments: ");

        jLabel2.setText("Rooms:");

        jLabel3.setText("Employees: ");

        cbEmp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEmpActionPerformed(evt);
            }
        });

        name.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name.setText("name");

        jScrollPane3.setViewportView(inbox);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(cbRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbDep, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(cbEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(search, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)))
                    .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(name)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(5, 5, 5)
                        .addComponent(cbDep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 12, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbDepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDepActionPerformed
        cbRoom.removeAllItems();
        if (cbDep.getSelectedIndex() == -1) {
            return;
        }
        for (int i = 0; i < listR.size(); i++) {
            if (listR.get(i).getDepid() == listDep.get(cbDep.getSelectedIndex()).getDepid()) {
                cbRoom.addItem(listR.get(i).getRname());
            }
        }
        cbRoom.setSelectedIndex(0);
    }//GEN-LAST:event_cbDepActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cbRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRoomActionPerformed
        cbEmp.removeAllItems();
        if (cbRoom.getSelectedIndex() == -1) {
            return;
        }
        int roomID = -1;
        for (int i = 0; i < listR.size(); i++) {
            if (listR.get(i).getRname().equals(cbRoom.getSelectedItem())) {
                roomID = listR.get(i).getRid();
                break;
            }
        }
        System.out.println(roomID);
        if (roomID == -1) {
            return;
        }
        for (EmployeeDTO employeeDTO : listAllEmp) {
            if (employeeDTO.getRid() == roomID) {
                cbEmp.addItem(employeeDTO.getUsername());
            }
        }
        cbEmp.addItem("admin");
        cbEmp.removeItem(employee.getUsername());
    }//GEN-LAST:event_cbRoomActionPerformed

    private void cbEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEmpActionPerformed

        receive = employeeDAO.getEmployeeByUsername((String) cbEmp.getSelectedItem());
        if (receive != null) {
            this.name.setText(receive.getFullname());
        }
    }//GEN-LAST:event_cbEmpActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        input.setText("");        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String content = this.input.getText().trim();
        if (receive == null || content == "" || content == null) {
            return;
        }
        int sendid = employee.getUid();
        int receiveid = receive.getUid();
        messageDAO.send(sendid, receiveid, content);
        this.input.setText("");

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbDep;
    private javax.swing.JComboBox<String> cbEmp;
    private javax.swing.JComboBox<String> cbRoom;
    private javax.swing.JTextPane inbox;
    private javax.swing.JTextArea input;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel name;
    private javax.swing.JTextField search;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        while (true) {
            try {
                Thread.sleep(1000);
                if (receive == null) {
                    continue;
                }
                // show 
                int n = allMessage.size();
                allMessage.clear();
                allMessage = messageDAO.getAll(employee.getUid(), receive.getUid());
                if (allMessage.size() == n) {
                    continue;
                }
                Collections.sort(allMessage, new Comparator<MessageDTO>() {
                    @Override
                    public int compare(MessageDTO o1, MessageDTO o2) {
                        return o1.getTime().compareTo(o2.getTime());
                    }

                });
                String x = "";
                for (int i = 0; i < allMessage.size(); i++) {
                    System.out.println(allMessage.get(i).getSendid());
                    x += (allMessage.get(i).getSendid() == employee.getUid())
                            ? ("<span style=\"color:rgb(0,255,0);\"> " + employee.getFullname())
                            : ("<span style=\"color:rgb(0,0,255);\"> " + receive.getFullname());
                    ;
                    x += "</span>";
                    x += allMessage.get(i).toString() + "<br>";

                }
                this.inbox.setText(x);
                JScrollBar verticalBar = jScrollPane3.getVerticalScrollBar();
                AdjustmentListener downScroller = new AdjustmentListener() {
                    @Override
                    public void adjustmentValueChanged(AdjustmentEvent e) {
                        Adjustable adjustable = e.getAdjustable();
                        adjustable.setValue(adjustable.getMaximum());
                        verticalBar.removeAdjustmentListener(this);
                    }
                };
                verticalBar.addAdjustmentListener(downScroller);
//scroll the text as it gets more and more
                JScrollBar vertical = jScrollPane3.getVerticalScrollBar();
                vertical.setValue(vertical.getMaximum());
            } catch (Exception ex) {
                Logger.getLogger(MessageView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
